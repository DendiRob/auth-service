events {
    worker_connections 1024;  
}

http {
    upstream nuxt {
        server nuxt:3001;
    }

    upstream nestjs {
        server nestjs:3000;
    }

    server {
        listen 80;
        listen [::]:80;
        server_name sportikapp.ru www.sportikapp.ru;

        return 301 https://$host$request_uri;
    }

    server {
        listen 443 ssl;
        server_name sportikapp.ru www.sportikapp.ru;

        ssl_certificate /etc/nginx/ssl/sportikapp.ru.crt;
        ssl_certificate_key /etc/nginx/ssl/sportikapp.ru.key;

        location / {
            proxy_pass http://nuxt;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
            proxy_redirect off;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        location /graphql {
            proxy_pass http://nestjs;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
            proxy_redirect off;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;


            add_header Access-Control-Allow-Origin $http_origin always;
            add_header Access-Control-Allow-Methods "GET, POST, OPTIONS, DELETE, PUT, PATCH" always;
            add_header Access-Control-Allow-Headers "Authorization, Content-Type, X-Requested-With, Accept" always;
            add_header Access-Control-Allow-Credentials "true" always;

            if ($request_method = OPTIONS) {
                return 204;
            }
        }
    }
}